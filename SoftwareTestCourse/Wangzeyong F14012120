第二章 2
软件质量是产品或服务所满足明示或暗示需求能力的固有特性和特征的集合。缺陷则指系统所需要实现的某种功能的失效或违背。
所以从定义上来讲，两者相互对立。通过发现缺陷可以提高产品质量，而找出缺陷发生的根本原因，或总结出软件产品的缺陷模式，
避免将来犯同样的错误或产生类似的问题，将有效提高后续产品质量。从这个角度来讲，两者相互统一。所以，两者对立统一。
5
尽早发现需求工程，软件设计等各个方面的问题，减少大量的后期返工，将质量成本从昂贵的后期返工转化为前期的缺陷发现。  
第三章 4
语句覆盖
输入  x=5,y=15
输出  x=5,y=3
输入  x=-15,y=-5
输出  x=-15,y=20
判定覆盖
输入  x=5,y=15
输出  x=5,y=3
输入  x=-15,y=-5
输出  x=-15,y=20
条件覆盖
输入  x=5,y=15
输出  x=5,y=3
输入  x=-15,y=-5
输出  x=-15,y=20
路径覆盖
条件覆盖
输入  x=5,y=15
输出  x=5,y=3
输入  x=-15,y=15
输出  x=-15,y=15
输入  x=-15,y=-5
输出  x=-15,y=20
6
序号            1  2  3  4  5  6  7  8         
条件  Y         1  1  1  0  0  0  1  0
     M          1  1  0  1  0  1  0  0
     D          1  0  1  1  1  0  0  0
动作 正确存储     1  0  0  0  0  0  0  0
     执行错误    0  1  1  1  1  1  1  1
第四章
1.作用：指导测试的实施、规划测试数据的准备、编写测试脚本的”设计规格说明书”、评估测试结果的度量基准、分析缺陷的标准

标准的测试用例由哪几个部分组成：
1.功能模块2.用例编号3.用例名称4.预置条件5.操作步骤6.输入数据操作描述7.期望结果8.测试结果9.备注

测试用例的组织方法：
按照程序的功能模块组织(系统所有功能) 
按照测试用例的类型组织 
按照测试用例的优先级组织

2.根据程序的功能模块精心组织是最常用的方法，同时可以将三种方式混合起来，灵活运用。

3. 1）及时删除过时的测试用例
　需求变更可能导致原有部分测试用例不再适合新的需求要求。例如，删除了某个功能，那么针对该功能的测试用例也不再需要。所以随着需求的每一次变更，
  都要删除那些不再使用的测试用例。
2）及时删除冗余的测试用例
　　在设计测试用例时，可能存在两个或者多个用例测试相同内容，降低回归测试效率，所以要定期整理测试用例集，及时删除冗余的测试用例。
3）增加新的测试用例
 　由于需求变更、用例遗漏或者版本发布后发现缺陷等原因，原有的测试用例集没有完全覆盖软件需求，需要增加新的测试用例。
4）改进测试用例
　　随着开发工作进行，测试用例不断增加，某些用例随着系统输入和当前状态的变化而变得不再适用，这些用例难以重用，影响回归测试的效率，需要进行改进，
  使之可重用可控制
